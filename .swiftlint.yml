disabled_rules: # rule identifiers to exclude from running
opt_in_rules: # some rules are only opt-in
  - empty_count
  - anyobject_protocol
  - array_init
  - attributes
  - closure_body_length
  - closure_end_indentation
  - closure_spacing
  - collection_alignment
  - contains_over_first_not_nil
  - discouraged_object_literal
  - convenience_type
  - conditional_returns_on_newline
  - discouraged_optional_boolean
  - discouraged_optional_collection
  - empty_string
  - explicit_init
  # - explicit_acl
  - empty_xctest_method
  - explicit_type_interface
  - extension_access_modifier
  - fallthrough
  - file_name
  - first_where
  - force_unwrapping
  - function_default_parameter_at_end
  - identical_operands
  # - implicitly_unwrapped_optional
  - joined_default_parameter
  - legacy_random
  - let_var_whitespace
  - literal_expression_end_indentation
  - lower_acl_than_parent
  - modifier_order
  - multiline_arguments
  - multiline_arguments_brackets
  - multiline_function_chains
  - multiline_literal_brackets
  - multiline_parameters
  # - multiline_parameters_brackets
  - nimble_operator
  - number_separator
  - operator_usage_whitespace
  - overridden_super_call
  - override_in_extension
  - pattern_matching_keywords
  - private_action
  - private_outlet
  - prohibited_interface_builder
  - prohibited_super_call
  - prefixed_toplevel_constant
  - quick_discouraged_call
  - quick_discouraged_focused_test
  - quick_discouraged_pending_test
  - redundant_nil_coalescing
  # - redundant_type_annotation
  - required_enum_case
  - single_test_class
  - sorted_first_last
  - sorted_imports
  - static_operator
  - strict_fileprivate
  - switch_case_on_newline
  - toggle_bool
  - trailing_closure
  - unavailable_function
  - unneeded_parentheses_in_closure_argument
  - untyped_error_in_catch
  - unused_import
  - unused_private_declaration
  - vertical_parameter_alignment_on_call
  - vertical_whitespace_between_cases
  - yoda_condition

included: # paths to include during linting. `--path` is ignored if present.
excluded: # paths to ignore during linting. Takes precedence over `included`.
  - Carthage
analyzer_rules: # Rules run by `swiftlint analyze` (experimental)
  - explicit_self

    # configurable rules can be customized from this configuration file
    # binary rules can set their severity level
explicit_type_interface:
    excluded: 
        - local
force_cast: warning # implicitly
force_try:
    severity: warning # explicitly
# rules that have both warning and error levels, can set just the warning level
# implicitly
line_length: 120
# they can set both implicitly with an array
type_body_length:
    - 300 # warning
    - 400 # error
# or they can set both explicitly
file_length:
    warning: 500
    error: 1000
# naming rules can set warnings/errors for min_length and max_length
# additionally they can set excluded names
type_name:
    min_length: 4 # only warning
    max_length: # warning and error
        warning: 40
        error: 50
    excluded: iPhone # excluded via string
identifier_name:
    min_length: # only min_length
        error: 4 # only error
    excluded: # excluded via string array
        - id
        - URL
        - GlobalAPIKey
reporter: "xcode" # reporter type (xcode, json, csv, checkstyle, junit, html, emoji, sonarqube, markdown)
